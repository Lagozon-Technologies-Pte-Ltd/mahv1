[
    {
        "input": "Generate a word cloud for the MODEL Group description \"BOLERO\" based on data from 01-Jan-2024 to 31-Mar-2024.",
        "query": "SELECT mm.MODL_GROP_DESC AS Model_Grop, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim, COUNT(cv.verbatim_code) AS frequency_count FROM MH_CUST_VERBATIM cv JOIN MH_RO_HDR_DETAILS rhd ON cv.sv_ro_hdr_sk = rhd.sv_ro_hdr_sk JOIN MH_MODEL_MASTER mm ON LOWER(rhd.MODL_CD) = LOWER(mm.MODL_CD) WHERE LOWER(mm.MODL_GROP_DESC) = LOWER('BOLERO') AND rhd.RO_BILL_DATE BETWEEN DATE '2024-01-01' AND DATE '2024-03-31' AND LOWER(cv.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%km%' GROUP BY mm.MODL_GROP_DESC, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Generate a Word Cloud for the FAMLY_DESC \"XUV700 Diesel AT\".",
        "query": "SELECT mm.MODL_GROP_DESC AS Model_Grop, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim, COUNT(cv.verbatim_code) AS frequency_count FROM MH_CUST_VERBATIM cv JOIN MH_RO_HDR_DETAILS rhd ON cv.sv_ro_hdr_sk = rhd.sv_ro_hdr_sk JOIN MH_MODEL_MASTER mm ON LOWER(rhd.MODL_CD) = LOWER(mm.MODL_CD) WHERE LOWER(mm.FAMLY_DESC) = LOWER('XUV700 Diesel AT') AND ((LOWER(rhd.SERV_CATGRY_DESC) IN ('free service', 'paid service', 'en-route repair', 'repair') AND LOWER(rhd.service_group) = LOWER('mechanical')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('bodyshop') AND LOWER(rhd.service_group) = LOWER('accessories')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('bodyshop') AND LOWER(rhd.service_group) = LOWER('bodyshop')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('sales & service') AND LOWER(rhd.service_group) = LOWER('accessories')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('bodyshop') AND LOWER(rhd.service_group) = LOWER('pre-sale/pdi'))) AND LOWER(cv.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%km%' GROUP BY mm.MODL_GROP_DESC, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Generate a Word Cloud for the Dealer \"PROVINCIAL AUTOMOBILE CO. PVT. LTD\" for the period from 01-Jan-2024 to 31-Mar-2024.",
        "query": "SELECT mh_ad_ai.delr_name AS Dealer_Name, mh_cust_verbatim.verbatim_group, mh_cust_verbatim.verbatim_code, mh_cust_verbatim.cust_verbtm_desc, mh_cust_verbatim.verbatim_group_desc, mh_cust_verbatim.demanded_verbatim, COUNT(mh_cust_verbatim.verbatim_code) AS frequency_count FROM MH_RO_HDR_DETAILS AS mh_ro JOIN MH_CUST_VERBATIM AS mh_cust_verbatim ON mh_ro.sv_ro_hdr_sk = mh_cust_verbatim.sv_ro_hdr_sk JOIN MH_AD_AI_DIMENSION AS mh_ad_ai ON LOWER(mh_ro.parnt_grop) = LOWER(mh_ad_ai.parnt_grop) AND LOWER(mh_ro.loctn_cd) = LOWER(mh_ad_ai.loctn_cd) AND LOWER(mh_ro.prodct_divsn) = LOWER(mh_ad_ai.prodct_divsn) WHERE LOWER(mh_ad_ai.delr_name) = LOWER('PROVINCIAL AUTOMOBILE CO. PVT. LTD') AND mh_ro.ro_bill_date BETWEEN DATE '2024-01-01' AND DATE '2024-03-31' AND ((LOWER(mh_ro.serv_catgry_desc) IN ('free service', 'paid service', 'en-route repair', 'repair') AND LOWER(mh_ro.service_group) = 'mechanical') OR (LOWER(mh_ro.serv_catgry_desc) = 'bodyshop' AND LOWER(mh_ro.service_group) IN ('accessories', 'bodyshop')) OR (LOWER(mh_ro.serv_catgry_desc) = 'sales & service' AND LOWER(mh_ro.service_group) = 'accessories') OR (LOWER(mh_ro.serv_catgry_desc) = 'bodyshop' AND LOWER(mh_ro.service_group) = 'pre-sale/pdi')) AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%km%' GROUP BY mh_ad_ai.delr_name, mh_cust_verbatim.verbatim_group, mh_cust_verbatim.verbatim_code, mh_cust_verbatim.cust_verbtm_desc, mh_cust_verbatim.verbatim_group_desc, mh_cust_verbatim.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Generate a word cloud for the MODEL Group description \"BOLERO\" based on data from 01-Jan-2024 to 31-Mar-2024.",
        "query": "SELECT mm.MODL_GROP_DESC AS Model_Grop, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim, COUNT(cv.verbatim_code) AS frequency_count FROM MH_CUST_VERBATIM cv JOIN MH_RO_HDR_DETAILS rhd ON cv.sv_ro_hdr_sk = rhd.sv_ro_hdr_sk JOIN MH_MODEL_MASTER mm ON LOWER(rhd.MODL_CD) = LOWER(mm.MODL_CD) WHERE LOWER(mm.MODL_GROP_DESC) = LOWER('BOLERO') AND rhd.RO_BILL_DATE BETWEEN DATE '2024-01-01' AND DATE '2024-03-31' AND LOWER(cv.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%km%' GROUP BY mm.MODL_GROP_DESC, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Generate a Word Cloud for the FAMLY_DESC \"XUV700 Diesel AT\".",
        "query": "SELECT mm.MODL_GROP_DESC AS Model_Grop, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim, COUNT(cv.verbatim_code) AS frequency_count FROM MH_CUST_VERBATIM cv JOIN MH_RO_HDR_DETAILS rhd ON cv.sv_ro_hdr_sk = rhd.sv_ro_hdr_sk JOIN MH_MODEL_MASTER mm ON LOWER(rhd.MODL_CD) = LOWER(mm.MODL_CD) WHERE LOWER(mm.FAMLY_DESC) = LOWER('XUV700 Diesel AT') AND ((LOWER(rhd.SERV_CATGRY_DESC) IN ('free service', 'paid service', 'en-route repair', 'repair') AND LOWER(rhd.service_group) = LOWER('mechanical')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('bodyshop') AND LOWER(rhd.service_group) = LOWER('accessories')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('bodyshop') AND LOWER(rhd.service_group) = LOWER('bodyshop')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('sales & service') AND LOWER(rhd.service_group) = LOWER('accessories')) OR (LOWER(rhd.SERV_CATGRY_DESC) = LOWER('bodyshop') AND LOWER(rhd.service_group) = LOWER('pre-sale/pdi'))) AND LOWER(cv.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%km%' GROUP BY mm.MODL_GROP_DESC, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Generate a Word Cloud for the Dealer \"PROVINCIAL AUTOMOBILE CO. PVT. LTD\" for the period from 01-Jan-2024 to 31-Mar-2024.",
        "query": "SELECT mh_ad_ai.delr_name AS Dealer_Name, mh_cust_verbatim.verbatim_group, mh_cust_verbatim.verbatim_code, mh_cust_verbatim.cust_verbtm_desc, mh_cust_verbatim.verbatim_group_desc, mh_cust_verbatim.demanded_verbatim, COUNT(mh_cust_verbatim.verbatim_code) AS frequency_count FROM MH_RO_HDR_DETAILS AS mh_ro JOIN MH_CUST_VERBATIM AS mh_cust_verbatim ON mh_ro.sv_ro_hdr_sk = mh_cust_verbatim.sv_ro_hdr_sk JOIN MH_AD_AI_DIMENSION AS mh_ad_ai ON LOWER(mh_ro.parnt_grop) = LOWER(mh_ad_ai.parnt_grop) AND LOWER(mh_ro.loctn_cd) = LOWER(mh_ad_ai.loctn_cd) AND LOWER(mh_ro.prodct_divsn) = LOWER(mh_ad_ai.prodct_divsn) WHERE LOWER(mh_ad_ai.delr_name) = LOWER('PROVINCIAL AUTOMOBILE CO. PVT. LTD') AND mh_ro.ro_bill_date BETWEEN DATE '2024-01-01' AND DATE '2024-03-31' AND ((LOWER(mh_ro.serv_catgry_desc) IN ('free service', 'paid service', 'en-route repair', 'repair') AND LOWER(mh_ro.service_group) = 'mechanical') OR (LOWER(mh_ro.serv_catgry_desc) = 'bodyshop' AND LOWER(mh_ro.service_group) IN ('accessories', 'bodyshop')) OR (LOWER(mh_ro.serv_catgry_desc) = 'sales & service' AND LOWER(mh_ro.service_group) = 'accessories') OR (LOWER(mh_ro.serv_catgry_desc) = 'bodyshop' AND LOWER(mh_ro.service_group) = 'pre-sale/pdi')) AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(mh_cust_verbatim.demanded_verbatim) NOT LIKE '%km%' GROUP BY mh_ad_ai.delr_name, mh_cust_verbatim.verbatim_group, mh_cust_verbatim.verbatim_code, mh_cust_verbatim.cust_verbtm_desc, mh_cust_verbatim.verbatim_group_desc, mh_cust_verbatim.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Generate a Word Cloud for the Area Office \"Calcutta\" for the period from 01-Jan-2024 to 31-Mar-2024.",
        "query": "SELECT mm.MODL_GROP_DESC AS Model_Grop, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim, COUNT(cv.verbatim_code) AS frequency_count FROM MH_CUST_VERBATIM cv JOIN MH_RO_HDR_DETAILS rhd ON cv.sv_ro_hdr_sk = rhd.sv_ro_hdr_sk JOIN MH_MODEL_MASTER mm ON LOWER(rhd.MODL_CD) = LOWER(mm.MODL_CD) JOIN MH_AD_AI_DIMENSION dim ON LOWER(rhd.PARNT_GROP) = LOWER(dim.parnt_grop) AND LOWER(rhd.LOCTN_CD) = LOWER(dim.loctn_cd) AND LOWER(rhd.PRODCT_DIVSN) = LOWER(dim.prodct_divsn) WHERE LOWER(dim.area_name) = LOWER('Calcutta') AND rhd.RO_BILL_DATE BETWEEN DATE '2024-01-01' AND DATE '2024-03-31' AND ((LOWER(rhd.SERV_CATGRY_DESC) IN ('free service', 'paid service', 'en-route repair', 'repair') AND LOWER(rhd.service_group) = 'mechanical') OR (LOWER(rhd.SERV_CATGRY_DESC) = 'bodyshop' AND LOWER(rhd.service_group) IN ('accessories', 'bodyshop')) OR (LOWER(rhd.SERV_CATGRY_DESC) = 'sales & service' AND LOWER(rhd.service_group) = 'accessories') OR (LOWER(rhd.SERV_CATGRY_DESC) = 'bodyshop' AND LOWER(rhd.service_group) = 'pre-sale/pdi')) AND LOWER(cv.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(cv.demanded_verbatim) NOT LIKE '%km%' GROUP BY mm.MODL_GROP_DESC, cv.verbatim_group, cv.verbatim_code, cv.cust_verbtm_desc, cv.verbatim_group_desc, cv.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Generate a Word Cloud for the \"West Zone\" covering the period from 01-Jan-2024 to 31-Mar-2024.",
        "query": "SELECT LOWER(MH_AD_AI_DIMENSION.zone_name) AS Dealer_Zone, LOWER(MH_AD_AI_DIMENSION.area_name) AS Dealer_AREA_Office, MH_CUST_VERBATIM.verbatim_group, MH_CUST_VERBATIM.verbatim_code, MH_CUST_VERBATIM.cust_verbtm_desc, MH_CUST_VERBATIM.verbatim_group_desc, MH_CUST_VERBATIM.demanded_verbatim, COUNT(MH_CUST_VERBATIM.verbatim_code) AS frequency_count FROM MH_CUST_VERBATIM JOIN MH_RO_HDR_DETAILS ON MH_CUST_VERBATIM.sv_ro_hdr_sk = MH_RO_HDR_DETAILS.sv_ro_hdr_sk JOIN MH_AD_AI_DIMENSION ON LOWER(MH_AD_AI_DIMENSION.parnt_grop) = LOWER(MH_RO_HDR_DETAILS.parnt_grop) AND LOWER(MH_AD_AI_DIMENSION.loctn_cd) = LOWER(MH_RO_HDR_DETAILS.loctn_cd) AND LOWER(MH_AD_AI_DIMENSION.prodct_divsn) = LOWER(MH_RO_HDR_DETAILS.prodct_divsn) WHERE LOWER(MH_AD_AI_DIMENSION.zone_name) = LOWER('West Zone') AND MH_RO_HDR_DETAILS.RO_BILL_DATE BETWEEN DATE '2024-01-01' AND DATE '2024-03-31' AND ((LOWER(MH_RO_HDR_DETAILS.SERV_CATGRY_DESC) IN ('free service', 'paid service', 'en-route repair', 'repair') AND LOWER(MH_RO_HDR_DETAILS.service_group) = 'mechanical') OR (LOWER(MH_RO_HDR_DETAILS.SERV_CATGRY_DESC) = 'bodyshop' AND LOWER(MH_RO_HDR_DETAILS.service_group) IN ('accessories', 'bodyshop')) OR (LOWER(MH_RO_HDR_DETAILS.SERV_CATGRY_DESC) = 'sales & service' AND LOWER(MH_RO_HDR_DETAILS.service_group) = 'accessories') OR (LOWER(MH_RO_HDR_DETAILS.SERV_CATGRY_DESC) = 'bodyshop' AND LOWER(MH_RO_HDR_DETAILS.service_group) = 'pre-sale/pdi'))) AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%schedule%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%washing%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%maxicare%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%wheel alignment%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%wheel balance%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%service action%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%10000%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%1000%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%5000%' AND LOWER(MH_CUST_VERBATIM.demanded_verbatim) NOT LIKE '%km%' GROUP BY Dealer_Zone, Dealer_AREA_Office, MH_CUST_VERBATIM.verbatim_group, MH_CUST_VERBATIM.verbatim_code, MH_CUST_VERBATIM.cust_verbtm_desc, MH_CUST_VERBATIM.verbatim_group_desc, MH_CUST_VERBATIM.demanded_verbatim ORDER BY frequency_count DESC;"
    },
    {
        "input": "Provide the list of Top 10 Rama consumed OEM parts under En-Route for the period from 01-Jan-2024 to 31-Dec-2024.",
        "query": "SELECT rp.part_code AS Part_Code, rp.part_desc AS Part_Description, ROUND(SUM(rp.part_quantity), 1) AS Total_Count, ROUND(SUM(rp.partamount), 1) AS Total_Value FROM MH_RO_PARTS rp JOIN MH_RO_HDR_DETAILS rhd ON rp.sv_ro_bill_hdr_sk = rhd.sv_ro_bill_hdr_sk JOIN MH_AD_AI_DIMENSION dim ON LOWER(dim.parnt_grop) = LOWER(rhd.parnt_grop) AND LOWER(dim.loctn_cd) = LOWER(rhd.loctn_cd) AND LOWER(dim.prodct_divsn) = LOWER(rhd.prodct_divsn) WHERE LOWER(rp.oem_part_ind) = 'y' AND rhd.serv_catgry_desc = 'En-Route' AND rhd.service_group = 'Pre-Sale/PDI' AND rhd.ro_bill_date BETWEEN DATE '2024-01-01' AND DATE '2024-12-31' AND LOWER(dim.zone_name) = LOWER('En-Route') AND LOWER(rp.part_category_group) = LOWER('Spares') AND rp.part_desc NOT ILIKE '%Filter%' GROUP BY rp.part_code, rp.part_desc ORDER BY Total_Value DESC LIMIT 10;"
    },
    {
        "input": "Retrieve the list of Top 10 consumed OEM parts under the \"Pre-Sale/PDI\" category for the period from 01-Jan-2024 to 31-Dec-2024",
        "query": "SELECT rp.part_code AS \"Part Code\", rp.part_desc AS \"Part Description\", ROUND(SUM(rp.part_quantity), 1) AS \"Total Count\", ROUND(SUM(rp.partamount), 1) AS \"Total Value\" FROM MH_RO_PARTS rp JOIN MH_RO_HDR_DETAILS rhd ON rp.sv_ro_bill_hdr_sk = rhd.sv_ro_bill_hdr_sk WHERE LOWER(rp.oem_part_ind) = LOWER('Y') AND rhd.ro_bill_date BETWEEN DATE '2024-01-01' AND DATE '2024-12-31' AND ((LOWER(rhd.serv_catgry_desc) IN (LOWER('En-Route'), LOWER('Pre-Sale/PDI')) AND LOWER(rhd.service_group) = LOWER('Pre-Sale/PDI'))) AND LOWER(rp.part_category_group) = LOWER('Spares') AND rp.part_desc NOT LIKE '%Filter%' GROUP BY rp.part_code, rp.part_desc ORDER BY \"Total Value\" DESC LIMIT 10;"
    },
    {
        "input": "Retrieve the list of Top 10 consumed OEM parts under Accessories from 01-Jan-2024 to 31-Dec-2024.",
        "query": "SELECT rp.part_code AS \"Part Code\", rp.part_desc AS \"Part Description\", ROUND(SUM(rp.part_quantity), 1) AS \"Total Count\", ROUND(SUM(rp.partamount), 1) AS \"Total Value\" FROM MH_RO_PARTS rp JOIN MH_RO_HDR_DETAILS rhd ON rp.sv_ro_bill_hdr_sk = rhd.sv_ro_bill_hdr_sk WHERE LOWER(rhd.serv_catgry_desc) = LOWER('Accessories') AND LOWER(rhd.service_group) = LOWER('Accessories') AND rp.oem_part_ind = 'Y' AND rp.part_category_group = 'Spares' AND rp.part_desc NOT LIKE '%Filter%' AND rhd.ro_bill_date BETWEEN DATE '2024-01-01' AND DATE '2024-12-31' GROUP BY rp.part_code, rp.part_desc ORDER BY SUM(rp.part_quantity) DESC LIMIT 10;"
    },
    {
        "input": "Generate a SQL query to retrieve the list of Top 10 consumed OEM parts under the \"Bodyshop\" category for the period from 01-Jan-2024 to 31-Dec-2024.",
        "query": "SELECT rp.part_code AS \"Part Code\", rp.part_desc AS \"Part Description\", ROUND(SUM(rp.part_quantity), 1) AS \"Total Count\", ROUND(SUM(rp.partamount), 1) AS \"Total Value\" FROM MH_RO_PARTS rp JOIN MH_RO_HDR_DETAILS rhd ON rp.sv_ro_bill_hdr_sk = rhd.sv_ro_bill_hdr_sk WHERE LOWER(rhd.serv_catgry_desc) = LOWER('Bodyshop') AND LOWER(rhd.service_group) = LOWER('Bodyshop') AND rp.oem_part_ind = 'Y' AND rhd.ro_bill_date BETWEEN DATE '2024-01-01' AND DATE '2024-12-31' GROUP BY rp.part_code, rp.part_desc ORDER BY \"Total Value\" DESC LIMIT 10;"
    },
    {
        "input": "List all parts used in a particular repair order RO25D000730",
        "query": "SELECT rp.part_desc , rp.part_code  FROM MH_RO_PARTS  rp  inner join  MH_RO_HDR_DETAILS  rohdr on (rp.SV_RO_HDR_SK = rohdr.SV_RO_HDR_SK ) WHERE LOWER(rohdr.ro_id) = LOWER('RO25D000730');;"
    },
    {
        "input": "List model descriptions and fuel types for all repair orders raised in 2024 with active models only.",
        "query": "SELECT mm.MODL_DESC, mm.FUEL_TYPE FROM MH_RO_HDR_DETAILS rohdr INNER JOIN MH_MODEL_MASTER mm ON rohdr.MODL_CD = mm.MODL_CD WHERE rohdr.RO_DATE BETWEEN '2024-01-01' AND '2024-12-31' AND LOWER(mm.ACTV_IND) = 'y';"
    },
    {
        "input": "List dealer names and locations for repair orders or ROs where the product division is 'PASSENGER VEHICLE'.",
        "query": "SELECT ad.delr_name, ad.loctn_name FROM MH_RO_HDR_DETAILS rohdr INNER JOIN MH_AD_AI_DIMENSION ad ON rohdr.LOCTN_CD = ad.loctn_cd WHERE rohdr.PRODCT_DIVSN = 'PASSENGER VEHICLE';"
    },
    {
        "input": "Get all customer verbatim feedback and group descriptions for RO IDs that were canceled.",
        "query": "SELECT cv.cust_verbtm_desc, cv.verbatim_group_desc FROM MH_RO_HDR_DETAILS rohdr INNER JOIN MH_CUST_VERBATIM cv ON rohdr.SV_RO_HDR_SK = cv.sv_ro_hdr_sk WHERE rohdr.RO_STATS = 'Cancelled';"
    },
    {
        "input": "Get labour descriptions and total amounts for repair orders or ROs where labour hours exceed 4 and RO is not cancelled.",
        "query": "SELECT rl.labr_desc, rl.labr_totl_amnt FROM MH_RO_HDR_DETAILS rohdr INNER JOIN MH_RO_LABOUR rl ON rohdr.SV_RO_HDR_SK = rl.sv_ro_hdr_sk WHERE rl.labr_charg_hrs > 4 AND rohdr.RO_STATS != 'Cancelled';"
    },
    {
        "input": "Show part descriptions and quantities for RO IDs where parts discount exceeded 200.",
        "query": "SELECT rp.part_desc, rp.part_quantity FROM MH_RO_HDR_DETAILS rohdr INNER JOIN MH_RO_PARTS rp ON rohdr.SV_RO_HDR_SK = rp.sv_ro_hdr_sk WHERE rp.part_discnt_amnt > 200;"
    },
    {
        "input": "What is the total labour consumption for each vehicle model, month by month, during the financial year 2024?",
        "query": "SELECT rohdr.MODL_CD, TO_CHAR(rohdr.RO_DATE, 'YYYY-MM') AS month, SUM(rl.labr_totl_amnt) AS total_labour_consumption FROM MH_RO_HDR_DETAILS rohdr INNER JOIN MH_RO_LABOUR rl ON rohdr.SV_RO_HDR_SK = rl.sv_ro_hdr_sk WHERE rohdr.RO_DATE BETWEEN '2023-04-01' AND '2024-03-31' GROUP BY rohdr.MODL_CD, TO_CHAR(rohdr.RO_DATE, 'YYYY-MM') ORDER BY rohdr.MODL_CD, month;"
    },
    {
        "input": "Analyze the distribution of transmission types across different vehicle segments and their impact on average labor costs per repair order.",
        "query": "SELECT mm.SEGMNT_CD, mm.TRANSMISSION, COUNT(*) AS repair_count, ROUND(AVG(TRY_CAST(rl.labr_totl_amnt AS FLOAT)), 1) AS avg_labor_cost, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY TRY_CAST(rl.labr_totl_amnt AS FLOAT)) AS median_labor_cost FROM MH_MODEL_MASTER mm JOIN MH_RO_HDR_DETAILS roh ON mm.MODL_CD = roh.MODL_CD JOIN MH_RO_LABOUR rl ON roh.SV_RO_HDR_SK = rl.sv_ro_hdr_sk GROUP BY mm.SEGMNT_CD, mm.TRANSMISSION ORDER BY mm.SEGMNT_CD, avg_labor_cost DESC;"
    },
    {
        "input": "What are the top 5 vehicle models by seat capacity that have the highest average repair order amounts, and how do they compare across different fuel types?",
        "query": "SELECT TOP 5 mm.MODL_CD, mm.MODL_DESC, mm.SEAT_CAPCTY, mm.FUEL_TYPE, ROUND(AVG(TRY_CAST(roh.PARTS_TOTL_AMNT AS FLOAT) + TRY_CAST(roh.LABR_TOTL_AMNT AS FLOAT)), 1) AS avg_repair_amount FROM MH_MODEL_MASTER mm JOIN MH_RO_HDR_DETAILS roh ON mm.MODL_CD = roh.MODL_CD GROUP BY mm.MODL_CD, mm.MODL_DESC, mm.SEAT_CAPCTY, mm.FUEL_TYPE ORDER BY mm.SEAT_CAPCTY DESC, avg_repair_amount DESC;"
    },
    {
        "input": "Which dealer locations (with latitude/longitude) have the highest number of repeat repairs for electric vehicles, segmented by zone?",
        "query": "SELECT ad.loctn_name, ad.loctn_cd, ad.longtitude, ad.lattitude, ad.zone_name, COUNT(*) AS repeat_repair_count FROM MH_AD_AI_DIMENSION ad JOIN MH_RO_HDR_DETAILS roh ON ad.loctn_cd = roh.LOCTN_CD JOIN MH_MODEL_MASTER mm ON roh.MODL_CD = mm.MODL_CD WHERE LOWER(roh.repeat_repair_flag) = LOWER('Y') AND LOWER(mm.FUEL_TYPE) LIKE LOWER('%electric%') GROUP BY ad.loctn_name, ad.loctn_cd, ad.longtitude, ad.lattitude, ad.zone_name ORDER BY repeat_repair_count DESC;"
    },
    {
        "input": "Analyze dealer performance by zone showing average repair order value, parts to labor ratio, and customer verbatim sentiment scores.",
        "query": "SELECT ad.zone_name, COUNT(DISTINCT roh.RO_ID) AS repair_count, ROUND(AVG(TRY_CAST(roh.PARTS_TOTL_AMNT AS FLOAT) + TRY_CAST(roh.LABR_TOTL_AMNT AS FLOAT)), 1) AS avg_ro_value, ROUND(SUM(TRY_CAST(roh.PARTS_TOTL_AMNT AS FLOAT)) / NULLIF(SUM(TRY_CAST(roh.LABR_TOTL_AMNT AS FLOAT)), 0), 2) AS parts_to_labor_ratio, STRING_AGG(LOWER(cv.verbatim_group_desc), ', ') AS common_verbatims FROM MH_AD_AI_DIMENSION ad JOIN MH_RO_HDR_DETAILS roh ON ad.loctn_cd = roh.LOCTN_CD LEFT JOIN MH_CUST_VERBATIM cv ON roh.SV_RO_HDR_SK = cv.sv_ro_hdr_sk WHERE roh.RO_DATE BETWEEN '2023-04-01' AND '2024-03-31' GROUP BY ad.zone_name ORDER BY avg_ro_value DESC;"
    },
    {
        "input": "What is the trend of warranty vs paid repairs by vehicle segment over the last 3 financial years, showing month-over-month comparison?",
        "query": "SELECT mm.SEGMNT_CD, FORMAT(DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0), 'MMM-yy') AS month, DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0) AS _Month_Start, SUM(CASE WHEN LOWER(roh.Warranty_Flag) = LOWER('Y') THEN 1 ELSE 0 END) AS warranty_count, SUM(CASE WHEN LOWER(roh.Warranty_Flag) = LOWER('N') THEN 1 ELSE 0 END) AS paid_count FROM MH_RO_HDR_DETAILS roh JOIN MH_MODEL_MASTER mm ON roh.MODL_CD = mm.MODL_CD WHERE roh.RO_DATE BETWEEN DATEADD(YEAR, -3, '2023-04-01') AND '2024-03-31' GROUP BY mm.SEGMNT_CD, FORMAT(DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0), 'MMM-yy'), DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0) ORDER BY mm.SEGMNT_CD, _Month_Start;"
    },
    {
        "input": "Analyze the correlation between vehicle age (from warranty start date) and repair costs, segmented by model group and fuel type.",
        "query": "SELECT mm.MODL_GROP_CD, mm.MODL_GROP_DESC, mm.FUEL_TYPE, DATEDIFF(MONTH, roh.ORGNL_WARNTY_START_DATE, roh.RO_DATE)/12 AS vehicle_age_years, COUNT(*) AS repair_count, ROUND(AVG(TRY_CAST(roh.PARTS_TOTL_AMNT AS FLOAT) + TRY_CAST(roh.LABR_TOTL_AMNT AS FLOAT)), 1) AS avg_repair_cost FROM MH_RO_HDR_DETAILS roh JOIN MH_MODEL_MASTER mm ON roh.MODL_CD = mm.MODL_CD WHERE roh.ORGNL_WARNTY_START_DATE IS NOT NULL GROUP BY mm.MODL_GROP_CD, mm.MODL_GROP_DESC, mm.FUEL_TYPE, DATEDIFF(MONTH, roh.ORGNL_WARNTY_START_DATE, roh.RO_DATE)/12 ORDER BY mm.MODL_GROP_CD, vehicle_age_years;"
    },
    {
        "input": "What are the most common customer complaint categories by vehicle segment and model group, with sentiment analysis?",
        "query": "SELECT mm.SEGMNT_CD, mm.MODL_GROP_CD, mm.MODL_GROP_DESC, cv.verbatim_group, COUNT(*) AS complaint_count, STRING_AGG(LOWER(cv.cust_verbtm_desc), ' | ') AS sample_complaints FROM MH_CUST_VERBATIM cv JOIN MH_RO_HDR_DETAILS roh ON cv.sv_ro_hdr_sk = roh.SV_RO_HDR_SK JOIN MH_MODEL_MASTER mm ON roh.MODL_CD = mm.MODL_CD GROUP BY mm.SEGMNT_CD, mm.MODL_GROP_CD, mm.MODL_GROP_DESC, cv.verbatim_group ORDER BY complaint_count DESC;"
    },
    {
        "input": "Analyze the relationship between customer verbatim sentiment and repair order value by dealer zone.",
        "query": "SELECT ad.zone_name, cv.verbatim_group, COUNT(*) AS case_count, ROUND(AVG(TRY_CAST(roh.PARTS_TOTL_AMNT AS FLOAT) + TRY_CAST(roh.LABR_TOTL_AMNT AS FLOAT)), 1) AS avg_ro_value FROM MH_CUST_VERBATIM cv JOIN MH_RO_HDR_DETAILS roh ON cv.sv_ro_hdr_sk = roh.SV_RO_HDR_SK JOIN MH_AD_AI_DIMENSION ad ON roh.LOCTN_CD = ad.loctn_cd GROUP BY ad.zone_name, cv.verbatim_group ORDER BY ad.zone_name, case_count DESC;"
    },
    {
        "input": "What is the breakdown of labor types by model group and their contribution to total repair costs?",
        "query": "SELECT mm.MODL_GROP_CD, mm.MODL_GROP_DESC, rl.labour_type_name, COUNT(*) AS labor_count, ROUND(SUM(TRY_CAST(rl.labr_totl_amnt AS FLOAT)), 1) AS total_labor_cost, ROUND(SUM(TRY_CAST(rl.labr_totl_amnt AS FLOAT)) * 100.0 / SUM(SUM(TRY_CAST(rl.labr_totl_amnt AS FLOAT)) OVER (PARTITION BY mm.MODL_GROP_CD), 1) AS percentage_of_total FROM MH_RO_LABOUR rl JOIN MH_RO_HDR_DETAILS roh ON rl.sv_ro_hdr_sk = roh.SV_RO_HDR_SK JOIN MH_MODEL_MASTER mm ON roh.MODL_CD = mm.MODL_CD GROUP BY mm.MODL_GROP_CD, mm.MODL_GROP_DESC, rl.labour_type_name ORDER BY mm.MODL_GROP_CD, total_labor_cost DESC;"
    },
    {
        "input": "Analyze the trend of standard vs. overtime labor hours by month for each product division.",
        "query": "SELECT roh.PRODCT_DIVSN, FORMAT(DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0), 'MMM-yy') AS month, DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0) AS _Month_Start, SUM(CASE WHEN LOWER(rl.labour_type_name) LIKE LOWER('%standard%') THEN TRY_CAST(rl.standrd_hrs AS FLOAT) ELSE 0 END) AS standard_hours, SUM(CASE WHEN LOWER(rl.labour_type_name) LIKE LOWER('%overtime%') THEN TRY_CAST(rl.standrd_hrs AS FLOAT) ELSE 0 END) AS overtime_hours FROM MH_RO_LABOUR rl JOIN MH_RO_HDR_DETAILS roh ON rl.sv_ro_hdr_sk = roh.SV_RO_HDR_SK WHERE roh.RO_DATE BETWEEN '2023-04-01' AND '2024-03-31' GROUP BY roh.PRODCT_DIVSN, FORMAT(DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0), 'MMM-yy'), DATEADD(MONTH, DATEDIFF(MONTH, 0, roh.RO_DATE), 0) ORDER BY roh.PRODCT_DIVSN, _Month_Start;"
    },
    {
        "input": "What is the parts consumption pattern by category for electric vs. ICE vehicles, showing OEM vs. aftermarket parts usage?",
        "query": "SELECT mm.FUEL_TYPE, rp.part_category_group, COUNT(*) AS part_count, SUM(TRY_CAST(rp.part_quantity AS FLOAT)) AS total_quantity, ROUND(SUM(TRY_CAST(rp.part_totl_amnt AS FLOAT)), 1) AS total_value, SUM(CASE WHEN LOWER(rp.oem_part_ind) = LOWER('Y') THEN 1 ELSE 0 END) AS oem_parts, SUM(CASE WHEN LOWER(rp.oem_part_ind) = LOWER('N') THEN 1 ELSE 0 END) AS aftermarket_parts FROM MH_RO_PARTS rp JOIN MH_RO_HDR_DETAILS roh ON rp.sv_ro_hdr_sk = roh.SV_RO_HDR_SK JOIN MH_MODEL_MASTER mm ON roh.MODL_CD = mm.MODL_CD GROUP BY mm.FUEL_TYPE, rp.part_category_group ORDER BY mm.FUEL_TYPE, total_value DESC;"
    },
    {
        "input": "Analyze the price variance between MRP and dealer purchase price for top 20 most used parts across all repairs.",
        "query": "SELECT TOP 20 rp.part_code, rp.part_desc, COUNT(*) AS usage_count, ROUND(AVG(TRY_CAST(rp.mrp AS FLOAT)), 1) AS avg_mrp, ROUND(AVG(TRY_CAST(rp.purchs_pric AS FLOAT)), 1) AS avg_purchase_price, ROUND(AVG(TRY_CAST(rp.mrp AS FLOAT) - TRY_CAST(rp.purchs_pric AS FLOAT)), 1) AS avg_price_variance, ROUND((AVG(TRY_CAST(rp.mrp AS FLOAT) - TRY_CAST(rp.purchs_pric AS FLOAT)) * 100.0 / NULLIF(AVG(TRY_CAST(rp.purchs_pric AS FLOAT)), 0), 1) AS percentage_variance FROM MH_RO_PARTS rp JOIN MH_RO_HDR_DETAILS roh ON rp.sv_ro_hdr_sk = roh.SV_RO_HDR_SK GROUP BY rp.part_code, rp.part_desc ORDER BY usage_count DESC;"
    },
    {
        "input": "how many ROs took more than 72 hours to repair.",
        "query": "SELECT COUNT(DISTINCT SV_RO_HDR_SK) AS RO_Count_Over_72_Hours FROM MH_RO_HDR_DETAILS WHERE RO_GT_72 <>0;"
    },
    {
        "input": "List all ROs which took Less than or equal to 48 hours to repair",
        "query": "SELECT DISTINCT RO_ID FROM MH_RO_HDR_DETAILS WHERE RO_LT_ET_48 <> 0 ;"
    },
    {
        "input": "List all ROs which took Less than or equal to 24 hours to repair",
        "query": "SELECT DISTINCT RO_ID FROM MH_RO_HDR_DETAILS WHERE RO_LT_ET_24 <> 0"
    },
    {
        "input": "Give the total parts amount billed for RO RO25D000730",
        "query": "SELECT ROUND(SUM(TRY_CAST(rohdr.PARTS_TOTL_AMNT AS FLOAT)), 1) AS Total_Parts_Amount_Billed FROM MH_RO_HDR_DETAILS rohdr WHERE LOWER(rohdr.ro_id) = LOWER('RO25D000730')"
    },
    {
        "input": "Give the total Labour amount billed for RO RO25D000730",
        "query": "SELECT ROUND(SUM(TRY_CAST(rohdr.LABR_TOTL_AMNT AS FLOAT)), 1) AS Total_Labour_Amount_Billed FROM MH_RO_HDR_DETAILS rohdr WHERE LOWER(rohdr.ro_id) = LOWER('RO25D000730')"
    },
    {
        "input": "Give the total  amount billed for RO RO25D000730",
        "query": "SELECT ROUND(SUM(TRY_CAST(rohdr.PARTS_TOTL_AMNT AS FLOAT)), 1) + ROUND(SUM(TRY_CAST(rohdr.LABR_TOTL_AMNT AS FLOAT)), 1) AS Total_Amount_Billed FROM MH_RO_HDR_DETAILS rohdr WHERE LOWER(rohdr.ro_id) = LOWER('RO25D000730')"
    },
    {
        "input": "Give all the ROs or Repair ORders where the vehicle is a TAXI",
        "query": "SELECT DISTINCT rohdr.RO_ID FROM MH_RO_HDR_DETAILS rohdr WHERE LOWER(rohdr.taxi_indicator) = LOWER('Taxi')"
    }
]